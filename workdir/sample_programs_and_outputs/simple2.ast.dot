digraph astgraph {
  node [shape=box, style = filled, fillcolor="white", fontsize=10, fontname="Courier", height=.09];
  ranksep=.3;
  edge [arrowsize=.5]
  node1 [label="<program>"]
  node2 [label="<declarations>"]
  node3 [label="INPUT:int"]
  node2 -> node3
  node4 [label="ISPRIME:bool"]
  node2 -> node4
  node5 [label="DIVISOR:int"]
  node2 -> node5
  node1 -> node2
  node6 [label="<statements>"]
  node7 [label=":=", fillcolor="white"]
  node8 [label="INPUT:int"]
  node7 -> node8
  node9 [label="readInt:int"]
  node7 -> node9
  node6 -> node7
  node10 [label=":=", fillcolor="white"]
  node11 [label="ISPRIME:bool"]
  node10 -> node11
  node12 [label="true:bool"]
  node10 -> node12
  node6 -> node10
  node13 [label="if"]
  node14 [label="<:bool", fillcolor="white"]
  node15 [label="INPUT:int"]
  node14 -> node15
  node16 [label="2:int"]
  node14 -> node16
  node13 -> node14
  node17 [label="<if_statements>"]
  node18 [label=":=", fillcolor="white"]
  node19 [label="ISPRIME:bool"]
  node18 -> node19
  node20 [label="false:bool"]
  node18 -> node20
  node17 -> node18
  node13 -> node17
  node21 [label="<else_statements>"]
  node22 [label=":=", fillcolor="white"]
  node23 [label="DIVISOR:int"]
  node22 -> node23
  node24 [label="-:int", fillcolor="white"]
  node25 [label="INPUT:int"]
  node24 -> node25
  node26 [label="1:int"]
  node24 -> node26
  node22 -> node24
  node21 -> node22
  node27 [label="while"]
  node28 [label=">=:bool", fillcolor="white"]
  node29 [label="DIVISOR:int"]
  node28 -> node29
  node30 [label="2:int"]
  node28 -> node30
  node27 -> node28
  node31 [label="<while_statements>"]
  node32 [label="if"]
  node33 [label="=:bool", fillcolor="white"]
  node34 [label="mod:int", fillcolor="white"]
  node35 [label="INPUT:int"]
  node34 -> node35
  node36 [label="DIVISOR:int"]
  node34 -> node36
  node33 -> node34
  node37 [label="0:int"]
  node33 -> node37
  node32 -> node33
  node38 [label="<if_statements>"]
  node39 [label=":=", fillcolor="white"]
  node40 [label="ISPRIME:bool"]
  node39 -> node40
  node41 [label="false:bool"]
  node39 -> node41
  node38 -> node39
  node32 -> node38
  node31 -> node32
  node42 [label=":=", fillcolor="white"]
  node43 [label="DIVISOR:int"]
  node42 -> node43
  node44 [label="-:int", fillcolor="white"]
  node45 [label="DIVISOR:int"]
  node44 -> node45
  node46 [label="1:int"]
  node44 -> node46
  node42 -> node44
  node31 -> node42
  node27 -> node31
  node21 -> node27
  node13 -> node21
  node6 -> node13
  node47 [label="if"]
  node48 [label="ISPRIME:bool"]
  node47 -> node48
  node49 [label="<if_statements>"]
  node50 [label="writeInt:int"]
  node51 [label="1:int"]
  node50 -> node51
  node49 -> node50
  node47 -> node49
  node52 [label="<else_statements>"]
  node53 [label="writeInt:int"]
  node54 [label="0:int"]
  node53 -> node54
  node52 -> node53
  node47 -> node52
  node6 -> node47
  node1 -> node6
}